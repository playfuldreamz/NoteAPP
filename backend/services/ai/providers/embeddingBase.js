/**
 * Base class (Interface) for embedding providers.
 * Defines the contract that all embedding providers must implement.
 */
class EmbeddingProviderBase {
  /**
   * Generate an embedding for the given text.
   * @param {string} text - The text to generate an embedding for.
   * @returns {Promise<number[]>} - A promise resolving to the embedding vector (array of numbers).
   * @throws {Error} If the method is not implemented by the subclass.
   */
  async embed(text) {
    throw new Error('Method embed() must be implemented by subclass');
  }

  /**
   * Get the dimension (vector size) of the embeddings generated by this provider.
   * @returns {number} - The dimension of the embeddings.
   * @throws {Error} If the method is not implemented by the subclass.
   */
  getDimension() {
    throw new Error('Method getDimension() must be implemented by subclass');
  }
}

module.exports = EmbeddingProviderBase;
